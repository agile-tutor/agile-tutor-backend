name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
    # The port of host
           host port: 3306
    # The port of container
           container port: 3306
    # --character-set-server - The character set of MySQL server
           character set server: utf8mb4
    # --collation-server - The character collation of MySQL server
           collation server: utf8mb4_general_ci
    # Version of MySQL to use
           mysql version: latest
    # MYSQL_ROOT_PASSWORD - root superuser password
           mysql root password: Ttip2023@
    # MYSQL_DATABASE - name for the default database that is created
           mysql database: agiletutorDB
    # MYSQL_USER - create the specified user with superuser power for created database
           mysql user: root
    # MYSQL_PASSWORD - specified superuser password which user is power for created database
           mysql password: root
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
